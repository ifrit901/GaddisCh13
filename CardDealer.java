package ch13java6thedition;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;
import java.util.Random;
import java.util.List;

/**
 * 10. Card Dealer
 * 
 * I don't have access to the source folder for the card images so 
 * I'll just download some jpegs from the internet. Write a GUI
 * application that randomly selects a card from the deck and 
 * displays it each time the user clicks a button. When a card 
 * has been selected, it is removed from the deck and cannot 
 * be selected again. Display a message when no more cards are
 * available. 
 * 
 * Many of the jpeg files I've downloads won't render properly 
 * and in order to save time I'm only going to use a few cards
 * in the deck since its difficult to find pictures that work 
 * properly.
 * 
 * @author craig
 */
public class CardDealer extends JFrame {
	
	String [] cards = {"/home/craig/Pictures/cards/aceHearts.jpeg", "/home/craig/Pictures/cards/eightSpades.jpeg", "/home/craig/Pictures/cards/fiveHearts.jpeg", 
		"/home/craig/Pictures/cards/jackSpades.jpeg", "/home/craig/Pictures/cards/kingSpades.jpeg", "/home/craig/Pictures/cards/queenHearts.jpeg", 
		"/home/craig/Pictures/cards/tenDiamonds.jpeg", "/home/craig/Pictures/cards/twoDiamonds.jpeg", "/home/craig/Pictures/cards/twoHearts.jpeg"}; 

	List<String> card = new ArrayList<>(Arrays.asList(cards));
	JButton pickACard;
	JLabel cardLabel;
	Random randy;
	JPanel panel;
	int numberOfCards = 9;
	ImageIcon picture;

	public CardDealer() {

		// Set the title
		setTitle("Card Dealer");

		// Set the location
		setLocation(500, 200);

		// Specify an action for the close button
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		setLayout(new BorderLayout());

		// Create the panel
		panel = new JPanel();
		panel.setPreferredSize(new Dimension(400, 300));

		// Create the button
		pickACard = new JButton("Draw");
		pickACard.setFont(new Font("Sans Serif", Font.BOLD, 20));
		pickACard.addActionListener(new ButtonListener());

		picture = new ImageIcon("/home/craig/Pictures/cards/aceHearts.jpeg");
		// Label for the card image
		cardLabel = new JLabel(picture);

		panel.add(cardLabel);

		// Add the components to the content pane
		add(pickACard, BorderLayout.SOUTH);
		add(panel, BorderLayout.CENTER);

		// Pack and display the window
		pack();
		setVisible(true);

	}

	/**
	 * The buildPanel method is called when the button is 
	 * clicked to draw a card. It redraws the label with a new 
	 * card in it.
	 * @param num 
	 */
	public void buildPanel(int num) {
		
		picture = new ImageIcon(card.get(num));
		cardLabel.setIcon(picture);
		card.remove(num);

	}

	/**
	 * Private inner class to handle the events generated by the 
	 * "Draw" button.
	 */
	private class ButtonListener implements ActionListener {

		public void actionPerformed(ActionEvent e) {

			if(numberOfCards == 0) {
				cardLabel.setIcon(null);
				cardLabel.setFont(new Font("SansSerif", Font.BOLD, 20));
				cardLabel.setText("No more cards!");

			} else {
				randy = new Random();
				int pic = randy.nextInt(numberOfCards);
				buildPanel(pic);
				numberOfCards--;
			}
			
		}

	}

	/**
	 * The main method creates an instance of the class causing
	 * it to display its window.
	 */
	public static void main(String[]args) {

		new CardDealer();

	}
}
